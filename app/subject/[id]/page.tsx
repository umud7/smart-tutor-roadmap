"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import {
  ArrowLeft,
  Play,
  BookOpen,
  Target,
  CheckCircle,
  Star,
  ThumbsUp,
  ThumbsDown,
  MessageCircle,
  Send,
} from "lucide-react"
import Link from "next/link"
import { useParams } from "next/navigation"
import { Textarea } from "@/components/ui/textarea"
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"

export default function SubjectDetailPage() {
  const params = useParams()
  const subjectId = params.id as string

  const subjectData: Record<string, any> = {
    azerbaijani: {
      name: "Az…ôrbaycan dili",
      icon: "üá¶üáø",
      level: "1-11 sinif",
      color: "bg-red-500",
      description: "Ana dilimizi d√ºzg√ºn v…ô g√∂z…ôl danƒ±≈ümaq, yazmaq v…ô oxumaq bacarƒ±qlarƒ±nƒ± inki≈üaf etdirin",
      longDescription:
        "Az…ôrbaycan dili f…ônni ≈üagirdl…ôrin ana dilin…ô olan sevgisini artƒ±rmaq, d√ºzg√ºn danƒ±≈üƒ±q v…ô yazƒ± bacarƒ±qlarƒ±nƒ± formala≈üdƒ±rmaq m…ôqs…ôdi da≈üƒ±yƒ±r. Bu f…ônn vasit…ôsil…ô ≈üagirdl…ôr dil qaydalarƒ±nƒ± √∂yr…ônir, l√ºƒü…ôt ehtiyatlarƒ±nƒ± z…ônginl…ô≈üdirir v…ô m…ôd…ôni d…ôy…ôrl…ôrimizl…ô tanƒ±≈ü olurlar.",
      topics: [
        { name: "∆èlifba v…ô s…ôsl…ôr", grade: "1-2 sinif", difficulty: "Asan" },
        { name: "S√∂z v…ô c√ºml…ô", grade: "2-3 sinif", difficulty: "Asan" },
        { name: "Nitq hiss…ôl…ôri", grade: "4-6 sinif", difficulty: "Orta" },
        { name: "C√ºml…ô √ºzvl…ôri", grade: "5-7 sinif", difficulty: "Orta" },
        { name: "M√ºr…ôkk…ôb c√ºml…ôl…ôr", grade: "8-9 sinif", difficulty: "√á…ôtin" },
        { name: "√úslubiyyat", grade: "10-11 sinif", difficulty: "√á…ôtin" },
      ],
      skills: ["Oxu bacarƒ±ƒüƒ±", "Yazƒ± bacarƒ±ƒüƒ±", "Danƒ±≈üƒ±q bacarƒ±ƒüƒ±", "Dinl…ôm…ô bacarƒ±ƒüƒ±", "Dil qaydalarƒ±"],
      benefits: [
        "Ana dilin…ô olan sevginin artmasƒ±",
        "D√ºzg√ºn v…ô g√∂z…ôl danƒ±≈üƒ±q bacarƒ±ƒüƒ±",
        "Yazƒ± bacarƒ±qlarƒ±nƒ±n t…ôkmill…ô≈üm…ôsi",
        "M…ôd…ôni d…ôy…ôrl…ôrl…ô tanƒ±≈ülƒ±q",
        "Kritik d√º≈ü√ºnc…ônin inki≈üafƒ±",
      ],
    },
    math: {
      name: "Riyaziyyat",
      icon: "üìä",
      level: "1-11 sinif",
      color: "bg-blue-500",
      description: "Riyazi d√º≈ü√ºnc…ô v…ô problem h…ôlli bacarƒ±qlarƒ±nƒ±zƒ± inki≈üaf etdirin",
      longDescription:
        "Riyaziyyat f…ônni ≈üagirdl…ôrin m…ôntiqi d√º≈ü√ºnc…ôsini inki≈üaf etdir…ôn, problem h…ôlli bacarƒ±qlarƒ±nƒ± formala≈üdƒ±ran v…ô g√ºnd…ôlik h…ôyatda t…ôtbiq edil…ô bil…ôn bilikl…ôri √∂yr…ôd…ôn …ôsas f…ônl…ôrd…ôn biridir.",
      topics: [
        { name: "∆èd…ôdl…ôr v…ô …ôm…ôll…ôr", grade: "1-4 sinif", difficulty: "Asan" },
        { name: "K…ôsrl…ôr", grade: "5-6 sinif", difficulty: "Orta" },
        { name: "C…ôbr", grade: "7-9 sinif", difficulty: "Orta" },
        { name: "H…ônd…ôs…ô", grade: "7-11 sinif", difficulty: "√á…ôtin" },
        { name: "Funksiyalar", grade: "9-11 sinif", difficulty: "√á…ôtin" },
        { name: "Diferensial hesab", grade: "11 sinif", difficulty: "√á…ôtin" },
      ],
      skills: ["Problem h…ôlli", "M…ôntiqi d√º≈ü√ºnc…ô", "Analitik bacarƒ±qlar", "Hesablama", "H…ônd…ôsi t…ôs…ôvv√ºr"],
      benefits: [
        "M…ôntiqi d√º≈ü√ºnc…ônin inki≈üafƒ±",
        "Problem h…ôlli bacarƒ±qlarƒ±nƒ±n artmasƒ±",
        "Analitik d√º≈ü√ºnc…ônin formala≈ümasƒ±",
        "G√ºnd…ôlik h…ôyatda t…ôtbiq imkanƒ±",
        "Dig…ôr f…ônl…ôr √º√ß√ºn …ôsas bilikl…ôr",
      ],
    },
    english: {
      name: "ƒ∞ngilis dili",
      icon: "üá¨üáß",
      level: "2-11 sinif",
      color: "bg-green-500",
      description: "Beyn…ôlxalq √ºnsiyy…ôt dili olan ƒ∞ngilis dilini √∂yr…ônin",
      longDescription:
        "ƒ∞ngilis dili m√ºasir d√∂vrd…ô beyn…ôlxalq √ºnsiyy…ôtin …ôsas vasit…ôsidir. Bu f…ônni √∂yr…ônm…ôkl…ô ≈üagirdl…ôr qlobal d√ºnyada √∂z yerl…ôrini tapa v…ô beyn…ôlxalq imkanlardan faydalana bil…ôrl…ôr.",
      topics: [
        { name: "∆èlifba v…ô s…ôsl…ôr", grade: "2-3 sinif", difficulty: "Asan" },
        { name: "∆èsas s√∂z ehtiyatƒ±", grade: "3-5 sinif", difficulty: "Asan" },
        { name: "Grammar …ôsaslarƒ±", grade: "5-7 sinif", difficulty: "Orta" },
        { name: "Zamanlar sistemi", grade: "7-9 sinif", difficulty: "Orta" },
        { name: "M√ºr…ôkk…ôb qrammatika", grade: "9-11 sinif", difficulty: "√á…ôtin" },
        { name: "Academic English", grade: "11 sinif", difficulty: "√á…ôtin" },
      ],
      skills: ["Speaking", "Listening", "Reading", "Writing", "Grammar", "Vocabulary"],
      benefits: [
        "Beyn…ôlxalq √ºnsiyy…ôt imkanƒ±",
        "Karyera perspektivl…ôrinin geni≈ül…ônm…ôsi",
        "Xarici …ôd…ôbiyyat v…ô m…ôd…ôniyy…ôtl…ô tanƒ±≈ülƒ±q",
        "ƒ∞nternet resurslarƒ±ndan istifad…ô",
        "Beyn…ôlxalq imtahanlara hazƒ±rlƒ±q",
      ],
    },
    physics: {
      name: "Fizika",
      icon: "‚öõÔ∏è",
      level: "7-11 sinif",
      color: "bg-purple-500",
      description: "T…ôbi…ôt qanunlarƒ±nƒ± v…ô fiziki prosesl…ôri √∂yr…ônin",
      longDescription:
        "Fizika f…ônni t…ôbi…ôtd…ô ba≈ü ver…ôn hadis…ôl…ôri izah ed…ôn, texnologiyanƒ±n …ôsasƒ±nƒ± t…ô≈ükil ed…ôn v…ô ≈üagirdl…ôrin elmi d√ºnyag√∂r√º≈ü√ºn√º formala≈üdƒ±ran m√ºh√ºm f…ôndir.",
      topics: [
        { name: "Mexanika", grade: "7-8 sinif", difficulty: "Orta" },
        { name: "Istilik", grade: "8 sinif", difficulty: "Orta" },
        { name: "Elektrik", grade: "9 sinif", difficulty: "Orta" },
        { name: "Optika", grade: "9-10 sinif", difficulty: "√á…ôtin" },
        { name: "Atom fizikasƒ±", grade: "11 sinif", difficulty: "√á…ôtin" },
        { name: "Kvant mexanikasƒ±", grade: "11 sinif", difficulty: "√á…ôtin" },
      ],
      skills: ["Eksperiment", "Analiz", "Hesablama", "Modell…ô≈üdirm…ô", "Elmi d√º≈ü√ºnc…ô"],
      benefits: [
        "T…ôbi…ôt hadis…ôl…ôrinin anla≈üƒ±lmasƒ±",
        "Texnoloji savadlƒ±lƒ±ƒüƒ±n artmasƒ±",
        "Elmi d√º≈ü√ºnc…ônin inki≈üafƒ±",
        "M√ºh…ôndislik sah…ôl…ôrin…ô hazƒ±rlƒ±q",
        "ƒ∞nnovasiya qabiliyy…ôtinin formala≈ümasƒ±",
      ],
    },
  }

  const [reviews, setReviews] = useState([
    {
      id: 1,
      user: "Ay≈ü…ô M…ômm…ôdova",
      avatar: "/placeholder.svg?height=40&width=40",
      rating: 5,
      date: "2024-01-15",
      comment: "Bu f…ônn √ßox maraqlƒ±dƒ±r! M√º…ôllim √ßox yax≈üƒ± izah edir v…ô m√∂vzular anla≈üƒ±qlƒ±dƒ±r.",
      likes: 12,
      dislikes: 1,
      helpful: true,
    },
    {
      id: 2,
      user: "R…ô≈üad ∆èliyev",
      avatar: "/placeholder.svg?height=40&width=40",
      rating: 4,
      date: "2024-01-10",
      comment: "Yax≈üƒ± f…ônndir, amma b…ôzi m√∂vzular bir az √ß…ôtindir. Daha √ßox n√ºmun…ô lazƒ±mdƒ±r.",
      likes: 8,
      dislikes: 2,
      helpful: false,
    },
    {
      id: 3,
      user: "Leyla H…ôs…ônova",
      avatar: "/placeholder.svg?height=40&width=40",
      rating: 5,
      date: "2024-01-08",
      comment: "∆èla f…ônn! AI m√º…ôllim √ßox k√∂m…ôk edir. H…ôr k…ôs…ô t√∂vsiy…ô edir…ôm.",
      likes: 15,
      dislikes: 0,
      helpful: true,
    },
  ])

  const [newReview, setNewReview] = useState({
    rating: 5,
    comment: "",
  })

  const [showReviewForm, setShowReviewForm] = useState(false)

  const subject = subjectData[subjectId] || subjectData.math

  const getDifficultyColor = (difficulty: string) => {
    switch (difficulty) {
      case "Asan":
        return "bg-green-100 text-green-800"
      case "Orta":
        return "bg-yellow-100 text-yellow-800"
      case "√á…ôtin":
        return "bg-red-100 text-red-800"
      default:
        return "bg-gray-100 text-gray-800"
    }
  }

  const handleSubmitReview = () => {
    if (newReview.comment.trim()) {
      const review = {
        id: reviews.length + 1,
        user: "Siz", // Real app-da user m…ôlumatƒ± olacaq
        avatar: "/placeholder.svg?height=40&width=40",
        rating: newReview.rating,
        date: new Date().toISOString().split("T")[0],
        comment: newReview.comment,
        likes: 0,
        dislikes: 0,
        helpful: false,
      }
      setReviews([review, ...reviews])
      setNewReview({ rating: 5, comment: "" })
      setShowReviewForm(false)
    }
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <header className="bg-white border-b">
        <div className="container mx-auto px-4 py-4 flex items-center justify-between">
          <div className="flex items-center space-x-4">
            <Button variant="ghost" size="icon" asChild>
              <Link href="/">
                <ArrowLeft className="h-5 w-5" />
              </Link>
            </Button>
            <div className="flex items-center space-x-3">
              <div className="text-3xl">{subject.icon}</div>
              <div>
                <h1 className="text-2xl font-bold">{subject.name}</h1>
                <p className="text-gray-600">{subject.level}</p>
              </div>
            </div>
          </div>

          <div className="flex items-center space-x-4">
            <Button asChild>
              <Link href="/dashboard">
                <Play className="h-4 w-4 mr-2" />
                √ñyr…ônm…ôy…ô Ba≈üla
              </Link>
            </Button>
          </div>
        </div>
      </header>

      <div className="container mx-auto px-4 py-8">
        {/* Hero Section */}
        <div className="mb-12">
          <Card className="border-0 shadow-lg bg-gradient-to-r from-blue-50 to-purple-50">
            <CardContent className="p-8">
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 items-center">
                <div>
                  <Badge className="mb-4 bg-blue-100 text-blue-800">{subject.level}</Badge>
                  <h2 className="text-3xl font-bold text-gray-900 mb-4">{subject.description}</h2>
                  <p className="text-gray-600 leading-relaxed mb-6">{subject.longDescription}</p>
                  <div className="flex flex-col sm:flex-row gap-4">
                    <Button size="lg" asChild>
                      <Link href="/register">
                        ƒ∞ndi Ba≈üla
                        <Play className="ml-2 h-4 w-4" />
                      </Link>
                    </Button>
                    <Button size="lg" variant="outline" asChild>
                      <Link href="/chat">AI M√º…ôlliml…ô S√∂hb…ôt</Link>
                    </Button>
                  </div>
                </div>
                <div className="text-center">
                  <div className="text-8xl mb-4">{subject.icon}</div>
                  <div className="grid grid-cols-2 gap-4">
                    <div className="bg-white rounded-lg p-4 shadow-md">
                      <div className="text-2xl font-bold text-blue-600">1000+</div>
                      <div className="text-sm text-gray-600">M…ô≈üq sualƒ±</div>
                    </div>
                    <div className="bg-white rounded-lg p-4 shadow-md">
                      <div className="text-2xl font-bold text-green-600">50+</div>
                      <div className="text-sm text-gray-600">Video d…ôrs</div>
                    </div>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Main Content */}
          <div className="lg:col-span-2">
            <Tabs defaultValue="topics" className="space-y-6">
              <TabsList className="grid w-full grid-cols-3">
                <TabsTrigger value="topics">M√∂vzular</TabsTrigger>
                <TabsTrigger value="skills">Bacarƒ±qlar</TabsTrigger>
                <TabsTrigger value="benefits">Faydalar</TabsTrigger>
              </TabsList>

              <TabsContent value="topics" className="space-y-6">
                <Card>
                  <CardHeader>
                    <CardTitle>√ñyr…ônm…ô M√∂vzularƒ±</CardTitle>
                    <CardDescription>Sinif s…ôviyy…ôsin…ô g√∂r…ô t…ô≈ükil olunmu≈ü m√∂vzular</CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    {subject.topics.map((topic: any, index: number) => (
                      <div
                        key={index}
                        className="flex items-center justify-between p-4 border rounded-lg hover:bg-gray-50 transition-colors"
                      >
                        <div className="flex-1">
                          <h3 className="font-medium text-lg">{topic.name}</h3>
                          <p className="text-sm text-gray-600">{topic.grade}</p>
                        </div>
                        <div className="flex items-center space-x-3">
                          <Badge className={getDifficultyColor(topic.difficulty)}>{topic.difficulty}</Badge>
                          <Button size="sm" variant="outline">
                            <BookOpen className="h-4 w-4 mr-1" />
                            √ñyr…ôn
                          </Button>
                        </div>
                      </div>
                    ))}
                  </CardContent>
                </Card>
              </TabsContent>

              <TabsContent value="skills" className="space-y-6">
                <Card>
                  <CardHeader>
                    <CardTitle>ƒ∞nki≈üaf Ed…ôc…ôyiniz Bacarƒ±qlar</CardTitle>
                    <CardDescription>Bu f…ônni √∂yr…ônm…ôkl…ô qazanacaƒüƒ±nƒ±z …ôsas bacarƒ±qlar</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      {subject.skills.map((skill: string, index: number) => (
                        <div key={index} className="flex items-center space-x-3 p-3 bg-blue-50 rounded-lg">
                          <CheckCircle className="h-5 w-5 text-blue-600" />
                          <span className="font-medium">{skill}</span>
                        </div>
                      ))}
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>

              <TabsContent value="benefits" className="space-y-6">
                <Card>
                  <CardHeader>
                    <CardTitle>Bu F…ônni √ñyr…ônm…ôyin Faydalarƒ±</CardTitle>
                    <CardDescription>G…ôl…ôc…ôk h…ôyatƒ±nƒ±zda siz…ô nec…ô k√∂m…ôk ed…ôc…ôk</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-4">
                      {subject.benefits.map((benefit: string, index: number) => (
                        <div key={index} className="flex items-start space-x-3 p-4 border rounded-lg">
                          <Star className="h-5 w-5 text-yellow-500 mt-0.5" />
                          <span className="text-gray-700">{benefit}</span>
                        </div>
                      ))}
                    </div>
                  </CardContent>
                </Card>
              </TabsContent>
            </Tabs>
          </div>

          {/* Sidebar */}
          <div className="space-y-6">
            {/* Quick Stats */}
            <Card>
              <CardHeader>
                <CardTitle>F…ônn Statistikalarƒ±</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="flex items-center justify-between">
                  <span className="text-sm text-gray-600">√á…ôtinlik s…ôviyy…ôsi</span>
                  <Badge variant="secondary">Orta</Badge>
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-sm text-gray-600">Ortalama √∂yr…ônm…ô vaxtƒ±</span>
                  <span className="font-medium">6 ay</span>
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-sm text-gray-600">Aktiv ≈üagird sayƒ±</span>
                  <span className="font-medium">2,500+</span>
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-sm text-gray-600">M√ºv…ôff…ôqiyy…ôt nisb…ôti</span>
                  <span className="font-medium text-green-600">94%</span>
                </div>
              </CardContent>
            </Card>

            {/* Learning Path */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center space-x-2">
                  <Target className="h-5 w-5" />
                  <span>√ñyr…ônm…ô Yolu</span>
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center">
                    <CheckCircle className="h-4 w-4 text-green-600" />
                  </div>
                  <span className="text-sm">∆èsas anlayƒ±≈ülar</span>
                </div>
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                    <div className="w-3 h-3 bg-blue-600 rounded-full"></div>
                  </div>
                  <span className="text-sm">Praktik m…ô≈üql…ôr</span>
                </div>
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center">
                    <div className="w-3 h-3 bg-gray-400 rounded-full"></div>
                  </div>
                  <span className="text-sm">M√ºr…ôkk…ôb m√∂vzular</span>
                </div>
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center">
                    <div className="w-3 h-3 bg-gray-400 rounded-full"></div>
                  </div>
                  <span className="text-sm">Final qiym…ôtl…ôndirm…ôsi</span>
                </div>
              </CardContent>
            </Card>

            {/* Related Subjects */}
            <Card>
              <CardHeader>
                <CardTitle>∆èlaq…ôli F…ônl…ôr</CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                {[
                  { name: "∆èd…ôbiyyat", icon: "üìñ", id: "literature" },
                  { name: "Tarix", icon: "üìö", id: "history" },
                  { name: "Coƒürafiya", icon: "üåç", id: "geography" },
                ].map((relatedSubject, index) => (
                  <Link
                    key={index}
                    href={`/subject/${relatedSubject.id}`}
                    className="flex items-center space-x-3 p-3 border rounded-lg hover:bg-gray-50 transition-colors"
                  >
                    <span className="text-xl">{relatedSubject.icon}</span>
                    <span className="font-medium">{relatedSubject.name}</span>
                  </Link>
                ))}
              </CardContent>
            </Card>
          </div>
        </div>

        {/* Reviews Section */}
        <div className="lg:col-span-3 mt-12">
          <Card className="border-0 shadow-lg">
            <CardHeader>
              <div className="flex items-center justify-between">
                <div>
                  <CardTitle className="flex items-center space-x-2">
                    <MessageCircle className="h-5 w-5" />
                    <span>≈ûagird R…ôyl…ôri</span>
                  </CardTitle>
                  <CardDescription>Bu f…ônn haqqƒ±nda ≈üagirdl…ôrin fikirl…ôri</CardDescription>
                </div>
                <Button onClick={() => setShowReviewForm(!showReviewForm)}>R…ôy Yaz</Button>
              </div>
            </CardHeader>
            <CardContent className="space-y-6">
              {/* Review Form */}
              {showReviewForm && (
                <Card className="border border-blue-200 bg-blue-50">
                  <CardContent className="p-4 space-y-4">
                    <div>
                      <label className="text-sm font-medium mb-2 block">Qiym…ôtl…ôndirm…ô</label>
                      <div className="flex items-center space-x-1">
                        {[1, 2, 3, 4, 5].map((star) => (
                          <button
                            key={star}
                            onClick={() => setNewReview({ ...newReview, rating: star })}
                            className={`h-6 w-6 ${
                              star <= newReview.rating ? "text-yellow-500 fill-current" : "text-gray-300"
                            }`}
                          >
                            <Star className="h-6 w-6" />
                          </button>
                        ))}
                      </div>
                    </div>
                    <div>
                      <label className="text-sm font-medium mb-2 block">R…ôyiniz</label>
                      <Textarea
                        placeholder="Bu f…ônn haqqƒ±nda fikirl…ôrinizi yazƒ±n..."
                        value={newReview.comment}
                        onChange={(e) => setNewReview({ ...newReview, comment: e.target.value })}
                        className="min-h-[100px]"
                      />
                    </div>
                    <div className="flex items-center space-x-2">
                      <Button onClick={handleSubmitReview} disabled={!newReview.comment.trim()}>
                        <Send className="h-4 w-4 mr-2" />
                        R…ôy G√∂nd…ôr
                      </Button>
                      <Button variant="outline" onClick={() => setShowReviewForm(false)}>
                        L…ôƒüv et
                      </Button>
                    </div>
                  </CardContent>
                </Card>
              )}

              {/* Reviews List */}
              <div className="space-y-4">
                {reviews.map((review) => (
                  <Card key={review.id} className="border">
                    <CardContent className="p-4">
                      <div className="flex items-start space-x-4">
                        <Avatar>
                          <AvatarImage src={review.avatar || "/placeholder.svg"} />
                          <AvatarFallback>{review.user.charAt(0)}</AvatarFallback>
                        </Avatar>
                        <div className="flex-1">
                          <div className="flex items-center justify-between mb-2">
                            <div>
                              <h4 className="font-medium">{review.user}</h4>
                              <div className="flex items-center space-x-2">
                                <div className="flex items-center">
                                  {[1, 2, 3, 4, 5].map((star) => (
                                    <Star
                                      key={star}
                                      className={`h-4 w-4 ${
                                        star <= review.rating ? "text-yellow-500 fill-current" : "text-gray-300"
                                      }`}
                                    />
                                  ))}
                                </div>
                                <span className="text-sm text-gray-500">{review.date}</span>
                              </div>
                            </div>
                          </div>
                          <p className="text-gray-700 mb-3">{review.comment}</p>
                          <div className="flex items-center space-x-4">
                            <button className="flex items-center space-x-1 text-sm text-gray-500 hover:text-green-600">
                              <ThumbsUp className="h-4 w-4" />
                              <span>{review.likes}</span>
                            </button>
                            <button className="flex items-center space-x-1 text-sm text-gray-500 hover:text-red-600">
                              <ThumbsDown className="h-4 w-4" />
                              <span>{review.dislikes}</span>
                            </button>
                            {review.helpful && (
                              <Badge variant="secondary" className="text-xs">
                                Faydalƒ±
                              </Badge>
                            )}
                          </div>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>

              {/* Load More */}
              <div className="text-center">
                <Button variant="outline">Daha √ßox r…ôy g√∂st…ôr</Button>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  )
}
